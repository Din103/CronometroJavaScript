main {
    font-family: 'Roboto Mono', monospace;
    position: relative;
}
.circle {
    border-radius: 50%;
    width: 120px;
    height: 120px;
    border: 1px solid #fff;
    color: #fff;
    /* auto es una palabra clave en CSS que ajusta automáticamente el margen izquierdo y derecho, y se utiliza comúnmente para centrar un elemento horizontalmente dentro de su contenedor */
    margin: 50px auto;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}
/* ::before es un pseudo-elemento en CSS. Los pseudo-elementos se utilizan para aplicar estilos a partes específicas de un elemento. */
.circle::before {
    content: ''; /* Inserta contenido vacío antes del elemento */
    border-radius: 50%; /* Hace que el elemento tenga forma circular */
    z-index: -1; /* Coloca este pseudo-elemento detrás del elemento principal */
    position: absolute; /* Posiciona el pseudo-elemento en relación al contenedor posicionado más cercano */
    width: 160px; 
    height: 160px; 
    left: calc(50% - 80px); /* Posiciona el pseudo-elemento horizontalmente en el centro del contenedor */
    top: calc(50% - 80px); /* Posiciona el pseudo-elemento verticalmente en el centro del contenedor */
    background-color: #1d1d1d; 
}
.seconds-sphere {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #fff;
    position: absolute;
    left: calc(50% - 10px);
    top: calc(50% - 10px);
    /* animación. Para que esto funcione, debe haber una declaración @keyframes correspondiente en el CSS que define lo que la animación rotation hará. */
    animation: rotation 60s linear infinite;
    animation-play-state: paused;
}
/* Esta animación:
Comienza con el elemento rotado 90 grados en sentido antihorario y desplazado 60 píxeles a la derecha.
Termina con el elemento rotado 270 grados en sentido horario y desplazado 60 píxeles a la derecha.
Debido a que 270 grados en sentido horario es equivalente a -90 grados (270 - 360 = -90), esta animación crea una rotación completa. */
 @keyframes rotation {
    from {transform: rotate(-90deg) translateX(60px)}
    to {transform: rotate(270deg) translateX(60px);}    
 }

 .buttons {
    margin-top: 10px;
    /* El elemento se comporta como un elemento en línea (inline element), lo que significa que se coloca en la misma línea que otros elementos en línea, si hay suficiente espacio.No empieza en una nueva línea y solo ocupa el espacio necesario. */
    display: inline-flex;
 }
 /* Este conjunto de estilos es utilizado para un icono de reproducción/pausa, típicamente en un reproductor de medios. La forma triangular creada por los bordes  representa una "pausa" (||) o una "reproducción" (▶) . */
 .paused {
    height: 10px;
    border-width: 5px 0px 5px 10px;
    cursor: pointer;
    /* Cambia el modelo de caja del elemento para incluir el borde y el relleno dentro de las dimensiones especificadas (ancho y alto). */
    box-sizing: border-box;
    margin-left: 15px;
    /* Esto puede ser usado para crear formas como flechas utilizando bordes de diferentes colores y anchos. */
    border-color: transparent transparent transparent #fff;
    /* Añade una transición suave de 100 milisegundos para todos los cambios de propiedad del elemento. La función de tiempo ease hace que la transición comience lentamente, acelere en el medio y luego desacelere nuevamente al final. */
    transition: 100ms all ease;
    /* Informa al navegador que el ancho del borde cambiará. */
    will-change: border-width;
    border-style: solid;
 }
.running {
    border-style: double;
    border-width: 0 0 0 10px;
}
.stop {
    background-color: #fff;
    height: 10px;
    width: 10px;
    cursor: pointer;
}
